package mypackage;

import java.lang.Math;
import javax.vecmath.Vector2f;

public class Vector extends Vector2f {
	protected float x;
	protected float y;

	public Vector(float x, float y) {
		this.x = x;
		this.y = y;
	}
	public void add(Vector2f other) { // vector/component-wise addition
		this.x += other.getX();
		this.y += other.getY(); 
	}
	public float cross(Vector2f other) { // returns magnitude of cross product
		return (float) (this.x * other.getY() - this.y - other.getX());
	}
	public void scalarMult(float c) { // scalar multiplication
		this.x *= c;
		this.y *= c;
	}
	public void rotate(float theta, Vector2f origin) { // uses linear transformations to rotate about a given origin
		float tempX = x - origin.getX();
		float tempY = y - origin.getY();
		this.x = (float) (tempX * Math.cos(Math.toRadians(theta)) - tempY * Math.sin(Math.toRadians(theta))) + origin.getX();
		this.y = (float) (tempX * Math.sin(Math.toRadians(theta)) - tempY * Math.cos(Math.toRadians(theta))) + origin.getY();
	}
}
