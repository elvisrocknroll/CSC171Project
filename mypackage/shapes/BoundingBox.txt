package mypackage.shapes;

import mypackage.Vector2f;
import mypackage.shapes.*;
import java.lang.Math;
import java.awt.Graphics;
import java.awt.Color;
import java.awt.Point;

/*

(x1, y1) - - - - - - (x2, y1)

   |                    |

   |                    |
  
   |                    |

   |                    |

(x1, y2) - - - - - - (x2, y2)

*/

public class BoundingBox extends VectorRect {
	private VectorShape shape;
	public BoundingBox(Vector2f vec, Vector2f tail) {
                this.vec = vec;
                this.tail = tail;
		calculatePosition();
        }
	public BoundingBox(VectorShape shape) {
		this.shape = shape;
		this.vec = shape.getVec();
		this.tail = shape.getTail();
		calculatePosition();
	}
	public char detectCollision(BoundingBox other) {
		if (other.getX2() >= x1 || other.getX1() <= x2) return 'x';
		if (other.getY2() <= y1 || other.getY1() >= y2) return 'y';
		return 'n';
	}
	public void handleCollision(BoundingBox other) {
		if (other.getX2() >= x1 || other.getX1() <= x2) shape.velocity.setX(0);
		if (other.getY2() <= y1 || other.getY1() >= y2) shape.velocity.setY(0);
	}
}
