package mypackage.shapes;

import mypackage.Vector2f;
import java.lang.Math;
import java.awt.Graphics;
import java.awt.Color;
import java.awt.Point;
import javax.imageIO.*;

public class VectorImage extends VectorShape {

        private Vector2f vec;
//        private Vector2f tail;
        private Vector2f head;
        private Vector2f drawnTail;
        private Vector2f drawnVec;
        private float x1;
        private float x2;
        private float y1;
        private float y2;
        private float width;
        private float height;
	private URL url;
	private BufferedImage img = null;

        public VectorImage(String url, Vector2f tail) {
                this.vec = vec;
                this.tail = tail;
		calculatePosition();
		this.url = new URL(getCodeBase(), url);
		img = ImageIO.read(this.url);
        }
	public float getArea() {
		return width * height;
	}
	public void calculatePosition() {
                this.head = vec.add(tail);
                this.drawnTail = tail.add((float) (0.5 * (vec.getX() - Math.abs(vec.getX()))), (float) (0.5 * (vec.getY() - Math.abs(vec.getY()))));
                this.drawnVec = new Vector2f(Math.abs(vec.getX()), Math.abs(vec.getY()));

                x1 = drawnTail.getX();
                x2 = drawnTail.add(drawnVec).getX();
                y1 = drawnTail.getY();
                y2 = drawnTail.add(drawnVec).getY();
                height = drawnVec.getY();
                width = drawnVec.getX();
	}
	public Vector2f getVec() {
		return vec;
	}
	public Vector2f getTail() {
		return tail;
	}
	public Vector2f getHead() {
		return head;
	}
	public boolean contains(Vector2f point) {
		float x = point.getX();
		float y = point.getY();
                if (x >= (float) x1 && x <= (float) x2 && (float) y >= y1 && y <= y2)
			return true;
		return false;
	}
	public boolean contains(Point point) {
		float x = (float) point.getX();
		float y = (float) point.getY();
                if (x >= (float) x1 && x <= (float) x2 && (float) y >= y1 && y <= y2)
			return true;
		return false;
	}
	public boolean contains(float x, float y) {
                if (x >= (float) x1 && x <= (float) x2 && (float) y >= y1 && y <= y2)
			return true;
		return false;
	}
        public void draw(Graphics g) {
                initGraphics(g);
                g.drawImage(img, Math.round(x1), Math.round(y1));
        }
        public void draw(Graphics g, int stroke) {
        }
        public void draw(Graphics g, Color outline) {
        }
        public void draw(Graphics g, int stroke, Color outline) {
        }
        public void fill(Graphics g) {
        }
        public void fill(Graphics g, Color fill) {
        }
        public void fill(Graphics g, Color fill, Color outline) {
        }
	public void fill(Graphics g, int stroke, Color fill, Color outline) {
        }
}
